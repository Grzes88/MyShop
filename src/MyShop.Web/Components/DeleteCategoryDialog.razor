@using MyShop.Web.DTO;
@using MyShop.Web.Services;

@inject ISnackbar Snackbar
@inject ICategoryService CategoryService

<MudDialog>
    <DialogContent>
        Are you sure to delete this Category?
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="ConfirmDeleteAsync">Delete Category</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public Guid CategoryId { get; set; }

    private async Task ConfirmDeleteAsync()
    {
        var responseMessage = await CategoryService.DeleteCategoryAsync(CategoryId);
        if (responseMessage.StatusCode == HttpStatusCode.NoContent)
        {
            Snackbar.Add("Category has been deleted", Severity.Success);
        }
        else if (responseMessage.StatusCode == HttpStatusCode.BadRequest)
        {
            var responseDto = await responseMessage.Content.ReadFromJsonAsync<ResponseDto>();
            Snackbar.Add($"{responseDto.Reason}", Severity.Error);
        }
        else if (responseMessage.StatusCode == HttpStatusCode.InternalServerError)
        {
            Snackbar.Add("Internal server error. Please try again later.", Severity.Warning);
        }
        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
        StateHasChanged();
    }
}
